#!/usr/bin/env sh
# bin/fimg — flags: -c (CLI), -r (reload), -h (help)

set -eu

resolve_dir() {
  tgt=$1
  while [ -L "$tgt" ]; do
    dir=$(cd -P -- "$(dirname -- "$tgt")" && pwd)
    link=$(readlink "$tgt")
    case $link in
    /*) tgt="$link" ;;
    *) tgt="$dir/$link" ;;
    esac
  done
  cd -P -- "$(dirname -- "$tgt")" && pwd
}

SCRIPT_DIR=$(resolve_dir "$0")
ROOT_DIR=$(cd -P -- "$SCRIPT_DIR/.." && pwd)

ENGINE_TEST_PY="$ROOT_DIR/engine/test_send.py"
BLAST_PY="$ROOT_DIR/engine/blast.py"
LIST_KEYS="all actives brothers pledges"

print_help() {
  cat <<EOF
fimg — fast iMessage group

Usage:
  fimg -r
      FULL reload: chmod +x for all *.sh/*.py, relink global 'fimg',
      refresh command cache.

  fimg -c [all|actives|brothers|pledges] to <names> : <message>
  fimg -c [all|actives|brothers|pledges] <names> : <message>
  fimg -c to <names> : <message>
      Force CLI mode; defaults to list = 'all' if omitted.

  fimg -h
      Show this help.

(Compat: 'test' / 'send' still route to engine/test_send.py; bare fimg launches UI.)
EOF
}

# ----------------------------- FLAGS -----------------------------------------

# -h / --help
if [ "${1-}" = "-h" ] || [ "${1-}" = "--help" ]; then
  print_help
  exit 0
fi

# -r (full reload)
if [ "${1-}" = "-r" ]; then
  echo "[fimg] Reloading everything..."

  echo "  • chmod +x for *.sh and *.py"
  find "$ROOT_DIR" -type f -name '*.sh' -exec chmod +x {} \; || true
  find "$ROOT_DIR" -type f -name '*.py' -exec chmod +x {} \; || true

  want="$ROOT_DIR/bin/fimg"
  echo "  • linking $want -> /usr/local/bin/fimg"
  if sudo ln -sf "$want" /usr/local/bin/fimg 2>/dev/null; then
    :
  else
    mkdir -p "$HOME/bin"
    ln -sf "$want" "$HOME/bin/fimg"
    echo "    (no sudo? created user symlink: $HOME/bin/fimg)"
    case ":$PATH:" in *":$HOME/bin:"*) : ;; *) export PATH="$HOME/bin:$PATH" ;; esac
  fi

  echo "  • refreshing command cache"
  hash -r 2>/dev/null || true
  command -v rehash >/dev/null 2>&1 && rehash || true

  echo "✅ fimg reloaded & relinked."
  echo "   which fimg => $(command -v fimg || echo 'not found in PATH')"
  exit 0
fi

# -c (force CLI blast)
if [ "${1-}" = "-c" ]; then
  shift
  if [ ! -x "$BLAST_PY" ]; then
    echo "[fimg] blast not found: $BLAST_PY" >&2
    exit 2
  fi

  # If first token is a list key and args contain a colon anywhere, route directly.
  if [ $# -gt 0 ]; then
    first="$1"
    case " $LIST_KEYS " in
    *" $first "*)
      case "$*" in *:*) exec "$BLAST_PY" "$@" ;; esac
      ;;
    esac
  fi

  # Otherwise, if a colon exists anywhere, default list = 'all'
  case "$*" in
  *:*) exec "$BLAST_PY" all "$@" ;;
  *)
    echo "Usage: fimg -c [all|actives|brothers|pledges] to <names> : <message>" >&2
    exit 1
    ;;
  esac
fi

# ---------------------------- COMPAT PATHS -----------------------------------

# Keep legacy testers
if [ "${1-}" = "test" ] || [ "${1-}" = "send" ]; then
  shift
  [ -x "$ENGINE_TEST_PY" ] || {
    echo "[fimg] engine tester not found: $ENGINE_TEST_PY" >&2
    exit 2
  }
  exec "$ENGINE_TEST_PY" "$@"
fi

# Default: launch UI (unchanged)
exec "$ROOT_DIR/ui/landing.sh" "$@"
